package ex44;

import java.io.IOException;

import analysis.Draw;
import ds.Seq;

/* p687
  4.4.21 Show, in the style of the trace in the text, the process of 
  computing the SPT with the Bellman-Ford algorithm for the edge-weighted 
  digraph of Exercise 4.4.5.
  
  This is done with a sequence of Drawings generated by 
    graph.BellmanFordSPXtrace.traceBellmanFordTinyEWDReverse02Ex4421()
  that's demonstrated below and is a specialized version of
    graph.BellmanFordSPXtrace.traceBellmanFord(String graph, int source).
  
 */  

public class Ex4421BellmanFordSPTtrace {
  
  public static void dispose(Seq<Draw> draw) {
    System.out.println("enter any key to dispose of drawings");
    try {
      System.in.read();
      for (Draw d : draw) if (d != null) d.frame().dispose();
      System.exit(0);
    } catch (IOException e) {
      for (Draw d : draw)  if (d != null) d.frame().dispose();
      System.exit(0);
    }
  }

  public static void main(String[] args) {

    Seq<Draw> draw = graph.BellmanFordSPXtrace.traceBellmanFordTinyEWDReverse02Ex4421();
    dispose(draw);

  }

}


