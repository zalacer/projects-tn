package ex13;

//  p171
//  1.3.46  Forbidden triple for stack generability. Prove that a permutation can be 
//  generated by a stack (as in the previous question) if and only if it has no forbidden 
//  triple (a, b, c) such that a < b < c with c first, a second, and b third (possibly 
//  with other intervening integers between c and a and between a and b).
//  Partial solution: Suppose that there is a forbidden triple (a, b, c). Item c is popped
//  before a and b, but a and b are pushed before c. Thus, when c is pushed, both a and b 
//  are on the stack. Therefore, a cannot be popped before b.

// What remains to complete the solution is to show that any output permutation that cannot
// be generated must have a forbidden triple, which will be done by proving that's the only
// possible cause of failure. First, let's restate that the input sequence is constructed with
// 0,...,N-1 digits in increasing order but intermixed with exactly N -1's. Suppose the input
// sequence contains digits a, b and c where a < b < c. Combinatorially there are six (3!)
// ways they might be output (possibly with intervening digits):
// 1. a,b,c: this can occur by push(a), pop(), push(b), pop(), push(c), pop().
// 2. a,c,b: this can occur by push(a), pop(), push(b), push(c), pop(), pop().
// 3. b,a,c: this can occur by push(a), push(b), pop(), pop(), push(c), pop().
// 4. b,c,a: this can occur by push(a), push(b), pop(), push(c), pop(), pop().
// 5. c,b,a: this can occur by push(a), push(b), push(c), pop(), pop(), pop().
// 6. c,a,b: this cannot occur since in order to output c first, a and b have to be pushed and 
//           kept in the stack until c is pushed, however, to achieve the order a then b in
//           the output, a must be popped immediately after it's pushed as shown in 1 and 2. 
//           another way of stating this is that due to the FIFO nature of the stack, its 
//           contents, if any, are maintained in decreasing order at all times, so that if a and 
//           b are both in the stack b must be on top of a and they can be output only in the 
//           order b followed by a.
// Furthermore case 6 is that of a forbidden triple and since there are no forbidden doubles or
// single for stacks, it's the minimal and only cause of generation failure for them.
// (qeueues, on the other hand, have forbidden doubles.)

public class Ex1346ForbiddenTriple {

  public static void main(String[] args) {

  }

}
